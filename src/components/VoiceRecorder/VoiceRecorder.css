/* VoiceRecorder.css
        <div className={`task-container ${className}`}>
            <h1>{title}</h1>
            <p>{subtitle}</p>

            <RecordingTimer
            time={recordingTime}
            status={recordingStatus}
            audioLevels={audioLevels}
            showVisualizer={showVisualizer}
            />

            <StatusIndicator status={recordingStatus} />

            <RecordingControls
            recordingStatus={recordingStatus}
            permission={permission}
            onStart={startRecording}
            onPause={pauseRecording}
            onResume={resumeRecording}
            onStop={stopRecording}
            onPermission={getMicrophonePermission}
            />

            <PlaybackSection
            audioURL={audioURL}
            recordingStatus={recordingStatus}
            onRepeat={repeatRecording}
            onNextTask={handleNextTask}
            showNextButton={showNextButton}
            />
        </div>
*/

/* Timer */
.timer-circle {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  border: 10px solid #e5e7eb;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 1.2rem auto;
  transition: border-color 0.3s ease;
}
.timer-circle.recording {
  border-color: var(--danger);
}
.timer-circle.paused {
  border-color: var(--warning);
}
.timer-display {
  font-size: 2rem;
  font-weight: 700;
}

/* Status badge */
.status {
  margin: 0.5rem 0;
  font-weight: 600;
  display: inline-block;
  padding: 0.4rem 0.8rem;
  border-radius: 9999px;
  font-size: 1rem;
  background: var(--muted);
  color: white;
}
.status.recording {
  background: var(--danger);
}
.status.paused {
  background: var(--warning);
}
.status.ready {
  background: var(--primary);
}
.status.done {
  background: var(--success);
}
